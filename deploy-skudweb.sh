#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è SKUDWEB –Ω–∞ Ubuntu 22.04

set -e

echo "üè¢ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –°–ö–£–î - SKUDWEB"
echo "======================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "requirement.txt" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: —Ñ–∞–π–ª requirement.txt –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ SKUDWEB"
    exit 1
fi

# –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É
echo "üì¶ –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É Ubuntu..."
sudo apt update && sudo apt upgrade -y

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã
echo "üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã..."
sudo apt install -y git curl software-properties-common apt-transport-https ca-certificates netcat

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if ! command -v docker &> /dev/null; then
    echo "üê≥ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker..."
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    sudo apt update
    sudo apt install -y docker-ce docker-ce-cli containerd.io
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if ! command -v docker-compose &> /dev/null; then
    echo "üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose..."
    sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
fi

# –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker
echo "üë§ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
sudo usermod -aG docker $USER

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è Apache
echo "üìÅ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
mkdir -p apache mysql ssl

# –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f ".env" ]; then
    echo "‚öôÔ∏è –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª–∏
    MYSQL_PASSWORD=$(openssl rand -base64 32 | tr -d "=+/" | cut -c1-25)
    MYSQL_ROOT_PASSWORD=$(openssl rand -base64 32 | tr -d "=+/" | cut -c1-25)
    SECRET_KEY=$(python3 -c 'import secrets; print(secrets.token_urlsafe(50))')
    
    cat > .env << EOF
# Django –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è SKUDWEB
SECRET_KEY=$SECRET_KEY
DEBUG=False
ALLOWED_HOSTS=localhost,127.0.0.1,$(curl -s ifconfig.me 2>/dev/null || echo "your-domain.com")

# MySQL –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
MYSQL_DATABASE=skudweb_db
MYSQL_USER=skudweb_user
MYSQL_PASSWORD=$MYSQL_PASSWORD
MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
MYSQL_HOST=mysql
MYSQL_PORT=3306

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –°–ö–£–î —Å–∏—Å—Ç–µ–º—ã
SKUD_COMPANY_NAME=–í–∞—à–∞ –∫–æ–º–ø–∞–Ω–∏—è
SKUD_ADMIN_EMAIL=admin@yourcompany.com
EOF
    
    echo "‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"
    echo "üîê MySQL –ø–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $MYSQL_PASSWORD"
    echo "üîê MySQL root –ø–∞—Ä–æ–ª—å: $MYSQL_ROOT_PASSWORD"
    echo "üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–∏ –ø–∞—Ä–æ–ª–∏ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ!"
else
    echo "‚ÑπÔ∏è  –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ"
fi

# –û–±–Ω–æ–≤–ª—è–µ–º requirements.txt –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
echo "üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
if ! grep -q "mysqlclient" requirement.txt; then
    echo "mysqlclient>=2.1.0" >> requirement.txt
    echo "python-dotenv>=1.0.0" >> requirement.txt
    echo "gunicorn>=21.0.0" >> requirement.txt
    echo "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è MySQL"
fi

echo "üèóÔ∏è  –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose up -d --build

echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 30

echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose ps

echo "üìä –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º –ª–æ–≥–∏ Django..."
docker-compose logs --tail=20 web

echo ""
echo "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ SKUDWEB –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –°–ö–£–î: http://$(curl -s ifconfig.me 2>/dev/null || echo 'localhost')"
echo "üóÑÔ∏è  phpMyAdmin: http://$(curl -s ifconfig.me 2>/dev/null || echo 'localhost'):8080"
echo "üìä MySQL –ø–æ—Ä—Ç: 3306"
echo ""
echo "üîß –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
echo "   - –°–æ–∑–¥–∞—Ç—å —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: docker-compose exec web python manage.py createsuperuser"
echo "   - –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: docker-compose logs -f web"
echo "   - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose restart"
echo "   - –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose down"
echo ""
echo "üìÅ –ü—Ä–æ–µ–∫—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: $(pwd)"
echo "üîê –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ MySQL —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª–µ .env"