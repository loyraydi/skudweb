version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: skudweb_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-skudweb_root_2024}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-skudweb_db}
      MYSQL_USER: ${MYSQL_USER:-skudweb_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-skudweb_pass_2024}
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
      - ./mysql-config:/etc/mysql/conf.d
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - skudweb_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: skudweb_phpmyadmin
    restart: always
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: ${MYSQL_USER:-skudweb_user}
      PMA_PASSWORD: ${MYSQL_PASSWORD:-skudweb_pass_2024}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-skudweb_root_2024}
      PMA_ARBITRARY: 1
      UPLOAD_LIMIT: 100M
    ports:
      - "${PHPMYADMIN_PORT:-8080}:80"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - skudweb_network

  # Django Application
  django:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: skudweb_django
    restart: always
    environment:
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY:-django-insecure-change-this-in-production}
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=${MYSQL_DATABASE:-skudweb_db}
      - DB_USER=${MYSQL_USER:-skudweb_user}
      - DB_PASSWORD=${MYSQL_PASSWORD:-skudweb_pass_2024}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
    ports:
      - "${DJANGO_PORT:-8000}:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - logs_volume:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - skudweb_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx (для продакшена)
  nginx:
    image: nginx:alpine
    container_name: skudweb_nginx
    restart: always
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - django
    networks:
      - skudweb_network

volumes:
  mysql_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local
  logs_volume:
    driver: local

networks:
  skudweb_network:
    driver: bridge